{"version":3,"sources":["./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA4C;AACI;AACmB;AACe;AACpC;AAG9C,CAAC,GAAS,EAAE,CAAC,uDAAD;IACV,IAAI;QACF,4DAA0B,EAAE;QAC5B,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QAC7D,wFAAoD,EAAE;aACnD,eAAe,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3D,uDAAW,EAAE,2DAAa,EAAE,8EAAsB,EAAE,6FAA6B,EAAE,yDAAY;SAChG,CAAC,CAAC;KACN;IAAC,OAAO,GAAG,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC;KACnB;AACH,CAAC,CAAC,GAAE;;;;;;;;;;;;;AClBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import * as AngularCore from '@angular/core'\r\nimport * as AngularRouter from '@angular/router'\r\nimport * as AngularPlatformBrowser from '@angular/platform-browser'\r\nimport * as AngularPlatformBrowserDynamic from '@angular/platform-browser-dynamic'\r\nimport * as AngularForms from '@angular/forms'\r\n\r\n\r\n(async () => {\r\n  try {\r\n    AngularCore.enableProdMode()\r\n    const text = await fetch('app/main.js').then(rs => rs.text())\r\n    AngularPlatformBrowserDynamic.platformBrowserDynamic()\r\n      .bootstrapModule(await eval(eval(text.split(\"\\n\")[0])(text))({\r\n        AngularCore, AngularRouter, AngularPlatformBrowser, AngularPlatformBrowserDynamic, AngularForms\r\n      }))\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n})()\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}